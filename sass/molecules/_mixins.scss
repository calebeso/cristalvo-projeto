/* -- Colors -- */
$preto: #000;
$branco: white;
$laranja:  #F58A07;
$cinza: #60695C;

/* --Navbar Button --*/
$button-height: 20px;
$button-width: 30px;


/* ======== Font */
$light: 300;
$regular: 400;
$bold: 700;


/*======Devices viewport */
$mobile-width: 640px;
$tablet-width: 768px;
$desktop-width: 1400px;


@mixin mobile {
	@media (max-width: #{$mobile-width}) {
		@content;
	}
}


@mixin tablet {
	@media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {
		@content;
	}
}

@mixin desktop {
	@media (min-width: #{$desktop-width}) {
		@content;
	}
}

@mixin flexbox{
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
}

@mixin gradient($angle,$gradient1, $gradient2){
  background-color: $gradient2;
  background-image: -webkit-gradient(linear, $angle, from($gradient1), to($gradient2));
  background-image: -webkit-linear-gradient($angle, $gradient1, $gradient2);
  background-image:    -moz-linear-gradient($angle, $gradient1, $gradient2);
  background-image:     -ms-linear-gradient($angle, $gradient1, $gradient2);
  background-image:      -o-linear-gradient($angle, $gradient1, $gradient2);
  background-image:         linear-gradient($angle, $gradient1, $gradient2);
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=$angle,StartColorStr='#{$gradient1}', EndColorStr='#{$gradient2}');
}
/* ======== Outros */
@mixin transition($transition...){
  -moz-transition:    all $transition linear;
  -o-transition:      all $transition linear;
  -webkit-transition: all $transition linear;
  transition:         all $transition linear;
}

@mixin border-radius($radius){ 
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

@function calculateRem($size){
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size){ 
  font-size: $size;
  font-size: calculateRem($size);
}

@mixin opacity($opacity){ 
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie);
}

/* ======== Columns */
@mixin columns($count: 3, $gap: 10){ 
  @include css3-prefix('column-count', $count);
  @include css3-prefix('column-gap', $gap);
}